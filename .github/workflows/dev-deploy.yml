name: Dev Deploy
on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Docker login (with PAT)
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker build (Corretto 17)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-dev:latest .
      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-dev:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" > ~/app/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" > ~/app/.env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/app/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/app/.env
            echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> ~/app/.env
            echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> ~/app/.env
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-dev:latest
            docker rm -f dev-app || true
            docker run -d --name dev-app -p 8080:8080 --restart unless-stopped ${{ secrets.DOCKER_USERNAME }}/spring-dev:latest
